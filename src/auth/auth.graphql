scalar Object

interface IData {
    data: Object
}

type CheckAuthData {
    isAuth: Boolean
}

type Tokens {
    access_token: String
    refresh_token: String
}

input InputLogIn {
    email: String
    password: String
}

input InputSignUp {
    name: String
    email: String
    password: String
}

type Query {
    checkAuth: CheckAuthData
}

input InputRefresh {
#    uid: String
    refreshToken: String
}

type Mutation {
    logIn(data: InputLogIn): Tokens!
    signUp(data: InputSignUp): Tokens!
    refresh: Tokens!
}
