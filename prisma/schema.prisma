generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @default(autoincrement())
  email     String     @unique
  uid       String     @unique @default(uuid())
  name      String?
  role      Role       @default(USER)
  createAt  DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  hash      String
  hasheRt   String?
  wishLists WishList[]

  @@id([uid, id])
  @@unique([uid, id])
  @@map("users")
}

model WishList {
  uid         String    @id @unique @default(uuid())
  name        String
  description String?
  uidUser     String
  user        User      @relation(fields: [uidUser], references: [uid], onDelete: Cascade, onUpdate: Cascade)
  products    Product[]

  @@unique([uidUser, uid], map: "index_uidUser_uid")
  @@map("wish-list")
}

model Product {
  name        String
  description String?
  price       Int
  royalties   Int
  delivery    Int
  marketPlace TypeMarketPlace
  link        String
  img         String
  status      StatusOrder
  uidWishList String?
  uid         String          @id @unique @default(uuid())
  labels      String[]
  uidReceiver String
  wishList    WishList?       @relation(fields: [uidWishList], references: [uid], onDelete: Cascade, onUpdate: Cascade)

  @@map("products")
}

model Order {
  uid         String      @id @unique @default(uuid())
  name        String
  description String?
  price       Int
  status      StatusOrder

  @@map("orders")
}

model Sender {
  uid       String  @id @unique @default(uuid())
  firstName String
  lastName  String
  email     String
  nickname  String?
  wishes    String?

  @@map("senders")
}

model Alert {
  uid         String  @id @unique @default(uuid())
  title       String
  description String?

  @@map("alerts")
}

model Rates {
  id                Int     @id @default(autoincrement())
  feePecentDelevery Decimal
  feePecentPrice    Decimal

  @@map("rates")
}

enum Role {
  USER
  ADMIN
}

enum TypeMarketPlace {
  OZON
  WB
}

enum StatusOrder {
  DELIVERY
  DELIVERED
  CANCELLED
  PROCESSING
  COMPLETED
  PENDING
  PAYED
}
